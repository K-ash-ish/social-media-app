// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url  	= env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  
  author    Profile?     @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  name    String?
  userHandle String @unique
  profilePic String?

  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique

  posts   Post[]

  following Follow[] @relation("following")
  followers Follow[] @relation("follower")
}
model Follow {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  followingId Int 
  following   Profile @relation("following", fields: [followingId], references: [id])

  followerId Int 
  follower Profile @relation("follower",fields: [followerId], references: [id])
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  password String? 
  authType AuthType
  
  profile Profile?
}

enum AuthType{
  PASSWORD
  GOOGLE
}